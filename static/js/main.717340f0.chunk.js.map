{"version":3,"sources":["components/ImageGallery/ImageGallery.tsx","images/firstpic.jpg","images/secondpic.jpg","images/thirdpic.jpg","images/fourthpic.jpg","images/fifthpic.jpg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LabelledImage","date","url","pos","display","width","height","borderRadius","bgSize","bgImage","position","top","left","color","size","Date","toLocaleDateString","ImageGallery","images","activeIndexProp","activeIndex","onActiveIndexChange","useControllableState","value","onChange","defaultValue","length","setActiveIndex","React","useState","transition","setTransition","useTimeout","undefined","transitionActiveIndex","bgColor","w","overflow","role","animation","minW","map","image","index","boxSize","icon","aria-label","_hover","transform","shadow","border","borderColor","onClick","_focus","_groupHover","right","bottom","direction","spacing","justify","Math","max","min","idx","opacity","abs","END_DATE","Knob","boxSizing","padding","h","PICTURES","firstpic","thirdpic","fourthpic","fifthpic","secondpic","App","getTime","countDownTime","setCountDownTime","useInterval","now","days","floor","date_diff","lightOn","setLightOn","mt","mx","align","gridGap","flex","ml","fontSize","getHours","toString","padStart","getMinutes","getSeconds","as","SunIcon","cursor","m","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.717340f0.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Box,\n  Center,\n  IconButton,\n  Stack,\n  Text,\n  useTimeout,\n  useControllableState,\n} from '@chakra-ui/react'\nimport { ChevronRightIcon, ChevronLeftIcon } from '@chakra-ui/icons'\n\ninterface LabelledImageProps {\n  date: string\n  url: string\n}\n\nconst LabelledImage: React.FC<LabelledImageProps> = ({ date, url }) => {\n  return (\n    <Center\n      pos=\"relative\"\n      display=\"inline-block\"\n      width=\"31vw\"\n      height=\"100%\"\n      borderRadius=\"md\"\n      bgSize=\"cover\"\n      bgImage={`url(${url})`}\n    >\n      <Text position=\"absolute\" top={4} left={4} color=\"white\" size=\"sm\">\n        {new Date(date).toLocaleDateString()}\n      </Text>\n    </Center>\n  )\n}\n\ninterface Props {\n  images: LabelledImageProps[]\n  activeIndex?: number\n  onActiveIndexChange?: (newIndex: number) => void\n}\n\nconst ImageGallery: React.FC<Props> = ({\n  images,\n  activeIndex: activeIndexProp,\n  onActiveIndexChange,\n}) => {\n  const [activeIndex, setActiveIndex] = useControllableState({\n    value: activeIndexProp,\n    onChange: onActiveIndexChange,\n    defaultValue: images.length - 1,\n  })\n  //React.useState(0)\n  const [transition, setTransition] = React.useState<number>()\n  useTimeout(\n    () => {\n      if (transition) {\n        setActiveIndex(transition + activeIndex)\n        setTransition(undefined)\n      }\n    },\n    transition ? 200 : null\n  )\n  const transitionActiveIndex = activeIndex + (transition ?? 0)\n  return (\n    <Box\n      pos=\"relative\"\n      bgColor=\"black\"\n      borderRadius=\"md\"\n      height=\"100%\"\n      w=\"100%\"\n      overflow=\"clip\"\n      transition=\"all 0.25s ease 0s\"\n      role=\"group\"\n    >\n      <Box\n        animation={\n          !transition\n            ? undefined\n            : transition > 0\n            ? 'image_gallery_left 400ms linear'\n            : 'image_gallery_right 400ms linear'\n        }\n        w=\"max-content\"\n        minW=\"100%\"\n        height=\"100%\"\n      >\n        {images.map(\n          (image, index) =>\n            (index === activeIndex ||\n              (transition && index === activeIndex + transition)) && (\n              <LabelledImage {...image} />\n            )\n        )}\n      </Box>\n      <IconButton\n        minW=\"30px\"\n        boxSize=\"30px\"\n        icon={<ChevronLeftIcon color=\"gray.700\" />}\n        aria-label=\"scroll image left\"\n        borderRadius=\"full\"\n        bgColor=\"rgba(255, 255, 255, .9)\"\n        _hover={{\n          bgColor: 'white',\n          transform: 'scale(1.04) translate(0, -50%)',\n          shadow: 'base',\n        }}\n        shadow=\"sm\"\n        pos=\"absolute\"\n        top=\"50%\"\n        transform=\"translate(0, -50%)\"\n        left=\"16px\"\n        border=\"1px solid\"\n        borderColor=\"rgba(0,0,0,.08)\"\n        onClick={() => setTransition(-1)}\n        display=\"none\"\n        _focus={{\n          shadow: 'sm',\n        }}\n        _groupHover={{\n          display: activeIndex > 0 ? 'initial' : 'none',\n        }}\n      />\n      <IconButton\n        minW=\"30px\"\n        boxSize=\"30px\"\n        icon={<ChevronRightIcon color=\"gray.700\" />}\n        aria-label=\"scroll image right\"\n        borderRadius=\"full\"\n        bgColor=\"rgba(255, 255, 255, .9)\"\n        _hover={{\n          bgColor: 'white',\n          transform: 'scale(1.04) translate(0, -50%)',\n          shadow: 'base',\n        }}\n        shadow=\"sm\"\n        pos=\"absolute\"\n        top=\"50%\"\n        transform=\"translate(0, -50%)\"\n        right=\"16px\"\n        border=\"1px solid\"\n        borderColor=\"rgba(0,0,0,.08)\"\n        display=\"none\"\n        onClick={() => setTransition(1)}\n        _focus={{\n          shadow: 'sm',\n        }}\n        _groupHover={{\n          display: activeIndex < images.length - 1 ? 'initial' : 'none',\n        }}\n      />\n      <Center\n        pos=\"absolute\"\n        right=\"0\"\n        left=\"0\"\n        bottom=\"8px\"\n        display=\"none\"\n        _groupHover={{\n          display: 'flex',\n        }}\n      >\n        <Box width=\"55px\" overflow=\"clip\">\n          <Stack\n            direction=\"row\"\n            spacing=\"5px\"\n            justify=\"center\"\n            transition={`\n              -ms-transform 0.2s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s,\n              -webkit-transform 0.2s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s,\n              transform 0.2s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s\n            `}\n            transform={`translateX(-${\n              11 *\n              Math.max(\n                Math.min(\n                  activeIndex - 2 + (transition ?? 0),\n                  images.length - 5\n                ),\n                0\n              )\n            }px)`}\n          >\n            {images.map((image, idx) => (\n              <Box\n                key={idx}\n                bgColor=\"white\"\n                borderRadius=\"full\"\n                boxSize=\"6px\"\n                opacity={idx === transitionActiveIndex ? '1' : '0.6'}\n                transition=\"opacity 0.2s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s\"\n                transform={`scale(${\n                  Math.max(\n                    Math.min(\n                      6 +\n                        (transitionActiveIndex === 0 ||\n                        transitionActiveIndex === images.length - 1\n                          ? 2\n                          : 1) -\n                        Math.abs(\n                          idx -\n                            transitionActiveIndex +\n                            (transitionActiveIndex === 2 ? 1 : 0) +\n                            (transitionActiveIndex === images.length - 3\n                              ? -1\n                              : 0)\n                        ),\n                      6\n                    ),\n                    4\n                  ) / 6\n                })`}\n              />\n            ))}\n          </Stack>\n        </Box>\n      </Center>\n    </Box>\n  )\n}\nexport default ImageGallery\n","export default __webpack_public_path__ + \"static/media/firstpic.08068c43.jpg\";","export default __webpack_public_path__ + \"static/media/secondpic.721681c4.jpg\";","export default __webpack_public_path__ + \"static/media/thirdpic.1a57c69a.jpg\";","export default __webpack_public_path__ + \"static/media/fourthpic.c1d191af.jpg\";","export default __webpack_public_path__ + \"static/media/fifthpic.3909a567.jpg\";","import React from 'react'\nimport { Box, Center, Flex, Icon, Text } from '@chakra-ui/react'\nimport { useInterval } from '@chakra-ui/hooks'\nimport './App.css'\nimport { SunIcon } from '@chakra-ui/icons'\nimport ImageGallery from './components/ImageGallery/ImageGallery'\nimport firstpic from './images/firstpic.jpg'\nimport secondpic from './images/secondpic.jpg'\nimport thirdpic from './images/thirdpic.jpg'\nimport fourthpic from './images/fourthpic.jpg'\nimport fifthpic from './images/fifthpic.jpg'\n\nconst END_DATE = new Date('2022-07-07T00:00:00')\n\nconst Knob: React.FC = () => {\n  return (\n    <Box\n      bgColor=\"#1b3542\"\n      borderRadius=\"full\"\n      boxSizing=\"border-box\"\n      width=\"4%\"\n      padding=\"4%\"\n      position=\"relative\"\n      h=\"fit-content\"\n    >\n      <Box\n        bgColor=\"white\"\n        h=\"2vmin\"\n        pos=\"absolute\"\n        top=\"10%\"\n        left=\"47%\"\n        right=\"47%\"\n      />\n    </Box>\n  )\n}\n\nconst PICTURES = [\n  {\n    date: '2021-11-18',\n    url: firstpic,\n  },\n  {\n    date: '2021-12-22',\n    url: thirdpic,\n  },\n  {\n    date: '2021-12-22',\n    url: fourthpic,\n  },\n  {\n    date: '2021-12-22',\n    url: fifthpic,\n  },\n  {\n    date: '2021-12-22',\n    url: secondpic,\n  },\n]\n\nfunction App() {\n  const [countDownTime, setCountDownTime] = React.useState<number>(\n    Math.max(END_DATE.getTime() - new Date().getTime(), 0)\n  )\n  useInterval(() => {\n    const now = new Date()\n    setCountDownTime(Math.max(END_DATE.getTime() - now.getTime(), 0))\n  }, 100)\n\n  var days = Math.floor(countDownTime / 1000 / 60 / (60 * 24))\n  var date_diff = new Date(countDownTime)\n\n  const [lightOn, setLightOn] = React.useState(false)\n\n  return (\n    <Center bgColor=\"white\" h=\"100vh\" w=\"100vw\">\n      <Box bgColor=\"#c1c1c1\" w=\"100vmin\" h=\"100vmin\">\n        <Box direction=\"row\" bgColor=\"#526477\" mt=\"1vmin\" mx=\"2vmin\" h=\"15vmin\">\n          <Flex\n            direction=\"row\"\n            h=\"full\"\n            align=\"center\"\n            gridGap=\"2vmin\"\n            mx=\"2vmin\"\n          >\n            <Knob />\n            <Knob />\n            <Flex flex=\"1\" h=\"100%\" align=\"center\" justify=\"center\">\n              <Box w=\"10%\" ml=\"2vmin\" />\n              <Center bgColor=\"black\" h=\"50%\" w=\"50%\">\n                <Text color=\"white\" fontSize=\"4vmin\">\n                  {days}d {date_diff.getHours().toString().padStart(2, '0')}:\n                  {date_diff.getMinutes().toString().padStart(2, '0')}:\n                  {date_diff.getSeconds().toString().padStart(2, '0')}\n                </Text>\n              </Center>\n              <Icon\n                as={SunIcon}\n                ml=\"2vmin\"\n                w=\"10%\"\n                h=\"auto\"\n                cursor=\"pointer\"\n                onClick={() => setLightOn(!lightOn)}\n                color={lightOn ? 'white' : 'gray.400'}\n              />\n            </Flex>\n            <Knob />\n            <Knob />\n          </Flex>\n        </Box>\n        <Box\n          mt=\"6vmin\"\n          h=\"4vmin\"\n          bgColor=\"#566478\"\n          borderRadius=\"5vmin\"\n          mx=\"2vmin\"\n        />\n        <Center\n          bgColor=\"black\"\n          m=\"2vmin\"\n          mt=\"6vmin\"\n          h=\"66vmin\"\n          borderRadius=\"4vmin\"\n        >\n          <Box display={lightOn ? 'block' : 'none'} w=\"85%\" h=\"85%\">\n            <ImageGallery images={PICTURES} />\n          </Box>\n        </Center>\n      </Box>\n    </Center>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { ChakraProvider } from '@chakra-ui/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}